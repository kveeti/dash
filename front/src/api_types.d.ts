/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["callback"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/{id}/linked/{linked_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["unlink"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/@me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_me"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["v1/accounts/query"];
        put?: never;
        post: operations["v1/accounts/create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/auth/init": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["init"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["v1/categories/query"];
        put?: never;
        post: operations["v1/categories/create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["v1/categories/delete"];
        options?: never;
        head?: never;
        patch: operations["v1/categories/update"];
        trace?: never;
    };
    "/v1/integrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["v1/integrations/get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/integrations/sync": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["v1/integrations/sync"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/integrations/{integration_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["v1/integrations/delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["v1/settings/save"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["v1/transactions/create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/transactions/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["v1/transactions/bulk"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/transactions/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["v1/transactions/query"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/transactions/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["v1/transactions/stats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/transactions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["v1/transactions/delete"];
        options?: never;
        head?: never;
        patch: operations["v1/transactions/update"];
        trace?: never;
    };
    "/v1/transactions/{id}/linked": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["v1/transactions/id/linked"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Account: {
            id: string;
            name: string;
        };
        Category: {
            id: string;
            is_neutral: boolean;
            name: string;
        };
        CategoryUpdateInput: {
            is_neutral: boolean;
            name: string;
        };
        ConnectedIntegration: {
            label: string;
            name: string;
        };
        CreateAccountInput: {
            name: string;
        };
        CreateCategoryInput: {
            is_neutral: boolean;
            name: string;
        };
        CreateTransactionInput: {
            account?: string | null;
            additional?: string | null;
            /** Format: float */
            amount: number;
            category?: string | null;
            counter_party: string;
            /** Format: date-time */
            date: string;
        };
        GetIntegrationsOutput: {
            available: components["schemas"]["Integration"][];
            connected: components["schemas"]["ConnectedIntegration"][];
        };
        Input: {
            id: string;
        };
        Integration: {
            label: string;
            link: string;
            name: string;
        };
        Link: {
            /** Format: date-time */
            created_at: string;
            tx: components["schemas"]["LinkedTx"];
            /** Format: date-time */
            updated_at?: string | null;
        };
        LinkedTx: {
            additional?: string | null;
            /** Format: float */
            amount: number;
            counter_party: string;
            currency: string;
            /** Format: date-time */
            date: string;
            id: string;
        };
        MeOutput: {
            csrf: string;
            id: string;
            settings?: null | components["schemas"]["Settings"];
        };
        Output: {
            dates: string[];
            e: number[][];
            e_cats: string[][];
            i: number[][];
            i_cats: string[][];
            n: number[][];
            n_cats: string[][];
            /** Format: float */
            te: number;
            /** Format: float */
            ti: number;
            tte: number[];
            tti: number[];
            ttn: number[];
        };
        QueryTx: {
            account?: null | components["schemas"]["Account"];
            additional?: string | null;
            /** Format: float */
            amount: number;
            category?: null | components["schemas"]["Category"];
            counter_party: string;
            currency: string;
            /** Format: date-time */
            date: string;
            id: string;
            links: components["schemas"]["Link"][];
        };
        SaveSettingsInput: {
            locale?: string | null;
            timezone?: string | null;
        };
        Settings: {
            locale?: string | null;
            timezone?: string | null;
        };
        TransactionBulkInput: {
            category_id?: string | null;
            ids: string[];
        };
        TransactionUpdateInput: {
            account?: string | null;
            additional?: string | null;
            /** Format: float */
            amount: number;
            category?: string | null;
            counter_party: string;
            /** Format: date-time */
            date: string;
        };
        TransactionsQueryInput: {
            left?: string | null;
            /** Format: int32 */
            limit?: number | null;
            right?: string | null;
            search_text?: string | null;
        };
        TransactionsQueryOutput: {
            next_id?: string | null;
            prev_id?: string | null;
            transactions: components["schemas"]["QueryTx"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    callback: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                code: string;
                state: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    unlink: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Transaction ID */
                id: string;
                /** @description Linked transaction ID */
                linked_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Input"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_me: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MeOutput"];
                };
            };
        };
    };
    "v1/accounts/query": {
        parameters: {
            query?: {
                search_text?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Account"][];
                };
            };
        };
    };
    "v1/accounts/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateAccountInput"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    init: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            307: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "v1/categories/query": {
        parameters: {
            query?: {
                search_text?: string;
                include_counts?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Category"][];
                };
            };
        };
    };
    "v1/categories/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCategoryInput"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/categories/delete": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description category id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "v1/categories/update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description category id */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CategoryUpdateInput"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/integrations/get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetIntegrationsOutput"];
                };
            };
        };
    };
    "v1/integrations/sync": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/integrations/delete": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description integration name */
                integration_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    "v1/settings/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SaveSettingsInput"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/transactions/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateTransactionInput"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/transactions/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TransactionBulkInput"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/transactions/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TransactionsQueryInput"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TransactionsQueryOutput"];
                };
            };
        };
    };
    "v1/transactions/stats": {
        parameters: {
            query: {
                timezone: string;
                start: string;
                end: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Output"];
                };
            };
        };
    };
    "v1/transactions/delete": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Transaction ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/transactions/update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Transaction ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TransactionUpdateInput"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "v1/transactions/id/linked": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description transaction id */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Input"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
